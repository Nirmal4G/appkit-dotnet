<Project>

  <!--
      This file contains logic that supports targeting multiple Compiler (i.e. Roslyn) versions.
      So, Define supported Versions before entering this file like so...

      <PropertyGroup Condition="'$(MSBuildProjectName)' == '{CompilerTargetingProject}'">
        <IsCompilerTargeting>True</IsCompilerTargeting>
        <SupportedCompilerVersions>4.1;4.2;4.3;4.4;4.5</SupportedCompilerVersion>
      </PropertyGroup>

      Then, this file can be conditionally imported using the $(IsCompilerTargeting) property only for
      projects that actually needs compiler targeting. In this case, the $(MSBuildProjectName) property
      can be used to determine compiler targeting projects.

      Hence, using that to set the former property allows to keep the the following import and
      the above default properties in a common place rather than duplicating them in each and
      every required project file. This keeps the project files simple.

      <Import Project="Toolkit.CompilerTargeting.props" Condition="'$(IsCompilerTargeting)' == 'true'" />
  -->

  <Choose>
    <When Condition="'$(MSBuildProjectExtension)' == '.csproj'">
      <PropertyGroup>
        <TargetLanguage>cs</TargetLanguage>
        <TargetLanguageIdentifier>CSharp</TargetLanguageIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectExtension)' == '.fsproj'">
      <PropertyGroup>
        <TargetLanguage>fs</TargetLanguage>
        <TargetLanguageIdentifier>FSharp</TargetLanguageIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectExtension)' == '.vbproj'">
      <PropertyGroup>
        <TargetLanguage>vb</TargetLanguage>
        <TargetLanguageIdentifier>VisualBasic</TargetLanguageIdentifier>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <TargetLanguageIdentifier>Common</TargetLanguageIdentifier>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Hook various extension targets at the right place in MSBuild target graph using built-in extension points -->
  <PropertyGroup>
    <!--
        Extends 'TargetFramework(s)' property with compiler profiles other than just platform profiles currently supported by the SDK.
        It also provides a default compiler defines and automatic package reference versioning.
        This makes multi-targeting across Compiler (e.g., Roslyn) versions a little bit easier.
    -->
    <BeforeTargetFrameworkInferenceTargets Condition="'$(IsCompilerTargeting)' == 'true'">$(BuildToolsDirectory)Toolkit.CompilerTargeting.targets</BeforeTargetFrameworkInferenceTargets>
  </PropertyGroup>

</Project>