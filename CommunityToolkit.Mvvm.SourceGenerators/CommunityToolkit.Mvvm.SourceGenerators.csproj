<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <IsSourceGeneratorProject>true</IsSourceGeneratorProject>
    <TargetFrameworks>netstandard2.0-roslyn4.0;netstandard2.0-roslyn4.3</TargetFrameworks>
  </PropertyGroup>

  <!-- Sources that are used by Generator logic in the target projects -->
  <ItemGroup>
    <Compile Remove="EmbeddedResources\*.cs" />
    <EmbeddedResource Include="EmbeddedResources\*.cs" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <!--
      These files enables tracking Analyzer releases for the rules that ship from this project.
      See https://github.com/dotnet/roslyn-analyzers/blob/main/src/Microsoft.CodeAnalysis.Analyzers/ReleaseTrackingAnalyzers.Help.md for more info.
  -->
  <ItemGroup>
    <AdditionalFiles Include="AnalyzerReleases.Shipped.md" />
    <AdditionalFiles Include="AnalyzerReleases.Unshipped.md" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="All" Pack="false" />
  </ItemGroup>

  <!-- Hook various extension targets at the right place in MSBuild target graph using built-in extension points -->
  <PropertyGroup>
    <!--
        Extends 'TargetFrameworks' property with custom profiles other than just platform profiles currently supported by the SDK.
        It also provides a default compiler define (like, 'ROSLYN_4_0') and automatic package versioning.
        Thus multi-targeting across Compiler (e.g. Roslyn) versions a little bit easier.
    -->
    <BeforeTargetFrameworkInferenceTargets Condition="'$(IsSourceGeneratorProject)' == 'true'">$(BuildToolsDirectory)Community.Toolkit.TargetInference.targets</BeforeTargetFrameworkInferenceTargets>
  </PropertyGroup>

</Project>